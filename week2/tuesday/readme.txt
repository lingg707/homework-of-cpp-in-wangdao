point.cc:
实现了运算符的重载,
    ++运算符的两种重载模式,
    +=运算符重载（在类中作为成员函数进行重载），return *this表示this指针指向对象中下一条需要执行的函数
    << 重载：使用是友元函数，定义在类内部，实现在外部，complex和point的输出流运算符均实现了重载，如果不重载，直接调用输出流运算符会编译报错
实现了类型强转，和c语言中类型强转的结果相同，主要是学习类型强转的定义，而且尽量少用
类型强转的特点：
    //类型转换函数的特点:
    //1. 成员函数
    //2. 没有返回值类型
    //3. 没有形参
    //4. 在函数体内必须以return语句返回一个目标类型的变量
    //5. 尽量不要使用


typeconvert.cc
实现了point与int型的类型转换,其中并没有写类型重载函数，仅用的隐式转换

string.cc:
测试 了string在内存中的分配方式，大于15字节的会分配给堆空间，小于等于15字节的会分配到栈空间


arrow.cc:
实现指针运算符的重载，是智能指针的雏形
