标准库提供了三种顺序容器适配器：queue(FIFO队列)、priority_queue(优先级队列)、stack(栈)
适配器是使一种事物的行为类似于另外一种事物行为的机制
eg：stack<int,vector<int>>实现了栈的功能，但是其内部使用顺序容器vector<int>来存储数据，
相当于是vector<int>表现出了栈的行为

用适配器来实现栈的行为，然后可以做到括号匹配，遇见右括号则弹出括号内的内容
使用stack处理带圆括号的表达式。遇到左括号时，将其标记下来。遇到右括号时，弹出stack中两
括号之间的元素（包括括号），并压入一个"@"表示其已被替换
步骤：
如果不是右括号，就直接入栈
如果碰见了右括号，就一直出栈，直到栈空或者遇见了左括号


priority_queue1.cc:
优先级高的意思是，每次优先级最高的就是数值最大或者最小的元素
auto cmp = [](int left, int right) { return (left ^ 1) < (right ^ 1); };//^表示按位异或,其实这个语句看不太懂
这个语句实现了偶数加一，奇数减一，最后的效果是相邻的两个元素两两交换
