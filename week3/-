#include <iostream>
using namespace std;
//指针与解引用运算符的重载返回值均为类内的成员，肯定是这样

class A
{
public:
    void display(){cout << "A()" << endl;}
};
class P
{
public:
    P(A &ra)
        :ptr(&ra){}
    A* operator->(void){return ptr;}//返回值为A*类型的ptr指针
private:
    A *ptr;//运算符重载的返回值刚好就是这成员元素
};

class PP
{
public:
    PP(A &ra)
        :p(ra){}
    P operator->(void){return p;}//返回值为上一个类型P的对象p，返回值不是指针，就单纯是P类型的对象
private:
    P p;
};

int main()
{
    A a;
    P p(a);
    p -> display();//这个运算符是与左操作数结合的吗
    cout << endl;
    PP pp(a);
    pp -> display();
    return 0;
}
